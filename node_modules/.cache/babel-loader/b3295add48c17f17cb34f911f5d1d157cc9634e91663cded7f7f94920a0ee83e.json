{"ast":null,"code":"var _jsxFileName = \"/home/insta/Desktop/Training/RectJS/use-state/src/MyComponent/CountryDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../css/country.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count = true;\nexport function CountryDetails() {\n  _s();\n  const [country, setCountry] = useState([\"Select Option\"]);\n  let countries = [{\n    country: \"india\",\n    cities: [\"Indore\", \"ujjain\", \"Dewas\", \"mumbai\"]\n  }, {\n    country: \"australia\",\n    cities: [\"Indore\", \"ujjain\", \"Dewas\", \"mumbai\"]\n  }, {\n    country: \"pakistan\",\n    cities: [\"Islamabad\", \"lahore\", \"karachi\"]\n  }];\n  let getCt = () => {\n    const select = document.getElementById(\"select\").value;\n    console.log(count);\n    countries.map((l, i) => {\n      if (count) {\n        setCountry(arr => [...arr, l.country]);\n        count = false;\n      }\n      if (l.country == select) {\n        console.log(countries[i].cities);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        padding: \"10px\"\n      },\n      children: \"Choose a Country:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"select\",\n        name: \"d1\",\n        onClick: getCt,\n        children: country.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryDetails, \"tY035E/cxg6+tNn1COVoO2g80kA=\");\n_c = CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","count","CountryDetails","_s","country","setCountry","countries","cities","getCt","select","document","getElementById","value","console","log","map","l","i","arr","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onClick","_c","$RefreshReg$"],"sources":["/home/insta/Desktop/Training/RectJS/use-state/src/MyComponent/CountryDetails.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"../css/country.css\";\nlet count = true;\nexport function CountryDetails() {\n  const [country, setCountry] = useState([\"Select Option\"]);\n  let countries = [\n    { country: \"india\", cities: [\"Indore\", \"ujjain\", \"Dewas\", \"mumbai\"] },\n    { country: \"australia\", cities: [\"Indore\", \"ujjain\", \"Dewas\", \"mumbai\"] },\n    { country: \"pakistan\", cities: [\"Islamabad\", \"lahore\", \"karachi\"] },\n  ];\n  let getCt = () => {\n    const select = document.getElementById(\"select\").value;\n    console.log(count);\n\n    countries.map((l, i) => {\n      if (count) {\n        setCountry((arr) => [...arr, l.country]);\n        count = false;\n      }\n      if (l.country == select) {\n        console.log(countries[i].cities);\n      }\n    });\n  };\n\n  return (\n    <div className=\"country\">\n      <label style={{ padding: \"10px\" }}>Choose a Country:</label>\n      <div>\n        <select id=\"select\" name=\"d1\" onClick={getCt}>\n          {country.map((i) => {\n            return <option value={i}>{i}</option>;\n          })}\n        </select>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,IAAIC,KAAK,GAAG,IAAI;AAChB,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzD,IAAIQ,SAAS,GAAG,CACd;IAAEF,OAAO,EAAE,OAAO;IAAEG,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ;EAAE,CAAC,EACrE;IAAEH,OAAO,EAAE,WAAW;IAAEG,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ;EAAE,CAAC,EACzE;IAAEH,OAAO,EAAE,UAAU;IAAEG,MAAM,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS;EAAE,CAAC,CACpE;EACD,IAAIC,KAAK,GAAGA,CAAA,KAAM;IAChB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK;IACtDC,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;IAElBK,SAAS,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACtB,IAAIhB,KAAK,EAAE;QACTI,UAAU,CAAEa,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEF,CAAC,CAACZ,OAAO,CAAC,CAAC;QACxCH,KAAK,GAAG,KAAK;MACf;MACA,IAAIe,CAAC,CAACZ,OAAO,IAAIK,MAAM,EAAE;QACvBI,OAAO,CAACC,GAAG,CAACR,SAAS,CAACW,CAAC,CAAC,CAACV,MAAM,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEP,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBpB,OAAA;MAAOqB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC5D1B,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAQ2B,EAAE,EAAC,QAAQ;QAACC,IAAI,EAAC,IAAI;QAACC,OAAO,EAAErB,KAAM;QAAAY,QAAA,EAC1ChB,OAAO,CAACW,GAAG,CAAEE,CAAC,IAAK;UAClB,oBAAOjB,OAAA;YAAQY,KAAK,EAAEK,CAAE;YAAAG,QAAA,EAAEH;UAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAU;QACvC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACvB,EAAA,CAlCeD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}